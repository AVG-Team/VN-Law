spring.application.name=auth-service
server.port=9001

## PERSISTENCE
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
logging.level.org.hibernate=ERROR

# spring.docs.api
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method

spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.security.oauth2.client.registration.google.client-id=${CLIENT_GOOGLE_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_GOOGLE_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${KONG_URL}/auth/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.secutiry.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realm/vn-realm

# keycloak
keycloak.realm=vnlaw-realm
keycloak.auth-server-url=http://localhost:8080
keycloak.resource=auth-service
keycloak.credentials.secret=${KEYCLOAK_SECRET}
keycloak.credentials.principal-attribute=preferred_username



# OAuth2 Client Configuration
spring.security.oauth2.client.registration.keycloak.client-id=myclient
spring.security.oauth2.client.registration.keycloak.client-secret=myclientsecret
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/auth/realms/myrealm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/auth/realms/myrealm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/auth/realms/myrealm/protocol/openid-connect/certs
